  ##############################
  ## SQLgrey support for Exim ##
  ##############################

1. Configure sqlgrey to close the socket for each request (which Exim's "readsocket" expects).  
   Add the option "--exim" to sqlgrey so that the line starting sqlgrey in the init script 
   "/etc/init.d/sqlgrey" reads as follows:

   sqlgrey -d --exim

2. Configure sqlgrey to use UNIX sockets. If the socket path is "/var/run/sqlgrey.sock", use 
   the following in sqlgrey.conf:

   socket = unix:/var/run/sqlgrey.sock

3. Edit sqlgrey to turn off prepending of greylist headers:

   prepend = 0

3. Make sure the socket is readable and writable by the Exim user. In the case that sqlgrey is 
   configured with user "sqlgrey" and group "sqlgrey", and exim with the user "exim", this can 
   be solved by giving the user "exim" membership in the "sqlgrey" group:

   usermod -a -G sqlgrey exim 

4. Configure Exim. Greylisting should be included at the bottom of the acl_smtp_rcpt section 
   (usually "acl_check_rcpt") after local parts verification, relay checks and RBL checks. 
   Edit /etc/exim/exim.conf and add the following:

   # greylisting start
   defer log_message	= greylisted host $sender_host_address
	 set acl_m9	= request=smtpd_access_policy\nprotocol_state=RCPT\nprotocol_name=${uc:$received_protocol}\nhelo_name=$sender_helo_name\nclient_address=$sender_host_address\nclient_name=$sender_host_name\nsender=$sender_address\nrecipient=$local_part@$domain\n\n
	 set acl_m9	= ${sg{${readsocket{/var/run/sqlgrey.sock}{$acl_m9}{5s}{}{action=DUNNO}}}{action=}{}}
	 message	= $acl_m9
	 condition	= ${if eq{${uc:${substr{0}{5}{$acl_m9}}}}{DUNNO} {false}{true} }
   # greylisting end

   This will make Exim connect to the socket "/var/run/sqlgrey.sock" and send a proper request
   to sqlgrey. If sqlgrey answers "action=dunno", Exim accepts the message. Otherwise, Exim will
   return the message generated by sqlgrey to the client MTA. If Exim's request to sqlgrey fails 
   or takes longer than 5 seconds, Exim accepts the message.

- Cato Feness, Linpro (ccf@linpro.no)
